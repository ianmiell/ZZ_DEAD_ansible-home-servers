# CRON SETUP
IF FILE_EXISTS /space/git/work
	USER imiell
	RUN cd /space/git/work
	RUN git pull
	LOGOUT imiell
	RUN cat /space/git/work/bin/crontab_imiell > /tmp/imiellcron
	RUN (cat /space/git/work/bin/crontab_$(hostname)_imiell 2>/tmp/imiellcronerr || true) >> /tmp/imiellcron
	RUN cat /tmp/imiellcron | crontab -u imiell -
	RUN cat /space/git/work/bin/crontab_root > /tmp/rootcron
	RUN (cat /space/git/work/bin/crontab_$(hostname)_root 2>/tmp/rootcronerr || true) >> /tmp/rootcron
	RUN cat /tmp/rootcron | crontab -
ENDIF
IF FILE_EXISTS /space/git/work
	IF FILE_EXISTS /etc/audit/rules.d
		RUN cp /space/git/work/bin/imiell_audit.rules /etc/audit/rules.d
	ENDIF
ENDIF

# Add a nexus user
IF_NOT RUN id -u nexus
	RUN useradd nexus
ENDIF

# Install required packages
# Required to diagnose crashes
INSTALL crash
# Required for gems
INSTALL libtool
INSTALL autoconf
# gems requirements done
INSTALL maven

INSTALL postgresql libreoffice socat etherwake openssh-server run-one apache2 vim python-pip meld tmux openjdk-8-jre alien brasero moreutils git git-extras npm asciidoc asciidoctor awscli python3-pip jq fslint pylint apt-file shellcheck sqlite3 golang-go gnuplot ubuntu-desktop ubuntu-gnome-desktop ioping sysstat fdupes html2text software-properties-common curl apt-transport-https ca-certificates pandoc htop nmap tasksel php qemu qemu-kvm libvirt-bin virtinst btrfs-tools ruby-dev sysdig
# For sec standards
INSTALL auditd
# X disk usage analyser
INSTALL xdiskusage
# ncurses disk usage analyser
INSTALL ncdu
# For Jenkins
INSTALL groovy
# IPTables state viewer
INSTALL iptstate
# fail2ban - ban IPs of failing ssh queries
INSTALL fail2ban
# Text-only browser
INSTALL links
# Tasksel - see notes/ubuntu
INSTALL libapache2-mod-php
RUN timedatectl set-ntp on
# latest dns utils, including drill
INSTALL ldnsutils libldns2
# Install docker
INSTALL docker.io

# Let's encrypt: https://certbot.eff.org/#ubuntuxenial-apache
IF_NOT RUN apt-cache policy | grep certbot
	RUN add-apt-repository -y ppa:certbot/certbot
	RUN apt -y update >/dev/null 2>&1
	INSTALL python-certbot-apache
ENDIF

IF_NOT RUN apt-cache policy | grep jonathonf.vim
	RUN add-apt-repository -y ppa:jonathonf/vim
	RUN apt -y update >/dev/null 2>&1
	INSTALL vim
ENDIF

# Handbrake - DESKTOP
IF_NOT RUN apt-cache policy | grep stebbins
	RUN add-apt-repository -y ppa:stebbins/handbrake-releases || true
	RUN apt -y update >/dev/null 2>&1 || true
	RUN apt -y install handbrake-cli >/dev/null 2>&1|| true
ENDIF

# grub-customizer - ALL
IF_NOT RUN apt-cache policy | grep grub-customizer
	RUN add-apt-repository -y ppa:danielrichter2007/grub-customizer
	INSTALL grub-customizer
ENDIF

# Google Chrome - Desktop
IF_NOT RUN google-chrome --version
	RUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
	RUN echo 'deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main' | tee /etc/apt/sources.list.d/google-chrome.list
	RUN apt update -y >/dev/null 2>&1
	INSTALL google-chrome-stable
ENDIF

# Terraform
IF_NOT RUN terraform version  | awk '{print $NF}' | head -1 | grep v0.11.3
	RUN wget https://releases.hashicorp.com/terraform/0.11.3/terraform_0.11.3_linux_amd64.zip
	RUN unzip terraform_0.11.3_linux_amd64.zip
	RUN mv terraform /usr/local/bin
	RUN rm -f terraform*
ENDIF

# Chef
IF_NOT RUN command chef
	RUN wget -qO- https://packages.chef.io/files/stable/chefdk/2.3.4/ubuntu/16.04/chefdk_2.3.4-1_amd64.deb > chefdk.deb
	RUN dpkg -i chefdk.deb
	RUN gem install kitchen
	RUN rm -f chefdk.deb
ENDIF


# pip upgrade
IF_NOT RUN pip list | grep requests
	RUN pip install requests
ENDIF
IF_NOT RUN pip list | grep coverage
	RUN pip install coverage
ENDIF
IF_NOT RUN pip list | grep python-twitter
	RUN pip install python-twitter
ENDIF
IF_NOT RUN pip list | grep setuptools
	RUN pip install setuptools
ENDIF
IF_NOT RUN pip list | grep twine
	RUN pip install twine
ENDIF
IF_NOT RUN pip list | grep butterfly
	RUN pip install butterfly
ENDIF
IF_NOT RUN pip list | grep shutit
	RUN pip install shutit
ENDIF
# Report on your aws setup
IF_NOT RUN pip list | grep Scout2
	RUN pip install awsscout2
ENDIF


# youtube-dl
IF_NOT FILE_EXISTS /usr/local/bin/youtube-dl
	RUN wget https://yt-dl.org/latest/youtube-dl -O /usr/local/bin/youtube-dl
	RUN chmod a+x /usr/local/bin/youtube-dl
	RUN hash -r
ENDIF

# Set up local storage
RUN mkdir -p /media/storage_{1,2}
# Create space folder and chown it to imiell
RUN mkdir -p /space/git
RUN mkdir -p /space/jenkins_cache
RUN chown -R imiell: /space

# Gem installs
# for inspec tests
IF_NOT RUN inspec version
	RUN gem install inspec >/dev/null 2>&1
ENDIF
# Asciidoc extras
IF_NOT RUN gem list | grep -w asciidoctor-pdf
	RUN gem install --pre asciidoctor-pdf >/dev/null 2>&1
ENDIF
IF_NOT RUN gem list | grep -w asciidoctor-revealjs
	RUN gem install --pre asciidoctor-revealjs >/dev/null 2>&1
ENDIF
IF_NOT RUN gem list | grep -w coderay
	RUN gem install coderay >/dev/null 2>&1
ENDIF
IF_NOT RUN gem list | grep -w pygments.rb
	RUN gem install pygments.rb >/dev/null 2>&1
ENDIF
IF_NOT RUN gem list | grep -w tilt
	RUN gem install tilt >/dev/null 2>&1
ENDIF
IF_NOT RUN gem list | grep -w slim
	RUN gem install slim >/dev/null 2>&1
ENDIF


# Generate an ssh key
IF_NOT FILE_EXISTS /home/imiell/.ssh/id_rsa.pub
	RUN ssh-keygen
	# Note that the response to 'already exists' below prevents overwrite here.
	EXPECT_MULTI ['file in which=','empty for no passphrase=','Enter same passphrase again=','already exists=n']
ENDIF

# Apache - basquiat/webserver only?
RUN a2enmod proxy
RUN a2enmod proxy_http
RUN a2enmod proxy_ajp
RUN a2enmod rewrite
RUN a2enmod deflate
RUN a2enmod headers
RUN a2enmod proxy_balancer
RUN a2enmod proxy_connect
RUN a2enmod proxy_html
RUN a2enmod php7.2
RUN a2enmod proxy_wstunnel


# Jenkins setup
RUN mkdir -p /var/jenkins
RUN chown imiell: /var/jenkins


#https://ubuntuforums.org/showthread.php?t=1842371 - speed up login
RUN sed -i 's/hosts:.*NOTFOUND.*/hosts: files dns/' /etc/nsswitch.conf

# Nexus needs to up limits.conf
ENSURE_LINE ['filename=/etc/security/limits.conf','line=nexus - nofile 65536','pattern=nexus - nofile.*']

IF_NOT RUN grep IgnoreLid=true /etc/UPower/UPower.conf
	RUN sed -i 's/IgnoreLid=.*/IgnoreLid=true' /etc/UPower/UPower.conf || true
	RUN systemctl daemon-reload && systemctl restart upower.service
ENDIF
IF_NOT RUN grep IgnoreLid=true /etc/UPower/UPower.conf
	RUN echo IgnoreLid=true >> /etc/UPower/UPower.conf
	RUN systemctl daemon-reload &&  systemctl restart upower.service
ENDIF

# Takes effect on next reboot
# https://unix.stackexchange.com/questions/269661/how-to-turn-off-wireless-power-management-permanently
RUN sed -i 's/wifi.powersave.*/wifi.powersave = 2/' /etc/NetworkManager/conf.d/default-wifi-powersave-on.conf
# Power management
RUN systemctl mask sleep.target suspend.target hibernate.target hybrid-sleep.target
IF_NOT RUN grep SUSPEND_METHODS="none" /etc/default/acpi-support
	RUN sed -i 's/SUSPEND_METHODS=".*/SUSPEND_METHODS="none"/' /etc/default/acpi-support || true
	RUN /etc/init.d/acpid restart
ENDIF

# Sysstat
RUN sed -i 's/^ENABLED.*/ENABLED="true"/' /etc/default/sysstat

# Auditd
IF_NOT RUN grep -- '-a exit,always -F arch=b64 -S execve' /etc/audit/audit.rules
	RUN echo '-a exit,always -F arch=b64 -S execve' >> /etc/audit/audit.rules
ENDIF
IF_NOT RUN grep -- '-a exit,always -F arch=b32 -S execve' /etc/audit/audit.rules
	RUN echo '-a exit,always -F arch=b32 -S execve' >> /etc/audit/audit.rules
ENDIF

################################################################################
# Log me in as imiell
USER imiell
# If it's not been done before, check out my dotfiles and set it up
# Generate an ssh key
IF_NOT FILE_EXISTS /home/imiell/.ssh/id_rsa.pub
	RUN ssh-keygen
	# Note that the response to 'already exists' below prevents overwrite here.
	EXPECT_MULTI ['file in which=','empty for no passphrase=','Enter same passphrase again=','already exists=n']
ENDIF
# Log imiell out
IF_NOT FILE_EXISTS /space/jenkins_cache/shutit-openshift-cluster
	RUN cd /space/jenkins_cache
	RUN git clone --depth=1 https://github.com/ianmiell/shutit-openshift-cluster
	RUN cd -
ENDIF
# Belt and braces - ensure it's up to date.
IF FILE_EXISTS /space/git/shutit-home-server
	RUN cd /space/git/shutit-home-server
	RUN git pull
	RUN cd -
ENDIF
IF_NOT FILE_EXISTS /home/imiell/.aws
	RUN mkdir -p /home/imiell/.aws
	RUN chown 0600 /home/imiell/.aws
ENDIF
LOGOUT
# ensure vim is the default for root
RUN echo 3 | update-alternatives --config editor
RUN chown -R imiell: /space


# NPM
IF_NOT RUN npm -g ll mermaid
	RUN npm install -g mermaid >/dev/null 2>&1
ENDIF
IF_NOT RUN which gtop
	RUN npm install -g gtop >/dev/null 2>&1
ENDIF

# Allow to get src
RUN sed -i 's/# deb-src/deb-src/' /etc/sources.list
